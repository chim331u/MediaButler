@inject IStateService StateService
@inject NavigationManager Navigation
@implements IDisposable

<div class="nav-menu">
    <!-- Primary Navigation -->
    <div class="nav-section">
        <h3 class="nav-section-title">Main</h3>
        <nav class="nav-items">
            <NavLink class="nav-item" href="/" Match="NavLinkMatch.All">
                <Icon Name="layout-dashboard" CssClass="nav-icon" />
                <span class="nav-text">Dashboard</span>
                @if (appState.PendingFiles > 0)
                {
                    <span class="nav-badge">@appState.PendingFiles</span>
                }
            </NavLink>

            <NavLink class="nav-item" href="/files">
                <Icon Name="files" CssClass="nav-icon" />
                <span class="nav-text">Files</span>
                @if (appState.TotalFiles > 0)
                {
                    <span class="nav-count">@appState.TotalFiles</span>
                }
            </NavLink>

            <NavLink class="nav-item" href="/pending">
                <Icon Name="pending" CssClass="nav-icon" />
                <span class="nav-text">Pending Review</span>
                @if (appState.PendingFiles > 0)
                {
                    <span class="nav-badge urgent">@appState.PendingFiles</span>
                }
            </NavLink>
        </nav>
    </div>

    <!-- Analytics Section -->
    <div class="nav-section">
        <h3 class="nav-section-title">Analytics</h3>
        <nav class="nav-items">
            <NavLink class="nav-item" href="/stats">
                <Icon Name="statistics" CssClass="nav-icon" />
                <span class="nav-text">Statistics</span>
            </NavLink>
        </nav>
    </div>

    <!-- System Section -->
    <div class="nav-section">
        <h3 class="nav-section-title">System</h3>
        <nav class="nav-items">
            <NavLink class="nav-item" href="/settings">
                <Icon Name="settings" CssClass="nav-icon" />
                <span class="nav-text">Settings</span>
            </NavLink>
        </nav>
    </div>

    <!-- Quick Actions -->
    <div class="nav-section">
        <h3 class="nav-section-title">Quick Actions</h3>
        <div class="quick-actions">
            <button class="quick-action-btn" @onclick="TriggerScan" disabled="@(!appState.IsConnected)">
                <Icon Name="refresh" CssClass="nav-icon" />
                <span>Scan Files</span>
            </button>
        </div>
    </div>
</div>

@code {
    private AppState appState = AppState.Initial;

    protected override void OnInitialized()
    {
        appState = StateService.CurrentState;
        StateService.StateChanged += OnStateChanged;
    }

    private void OnStateChanged(AppState newState)
    {
        appState = newState;
        InvokeAsync(StateHasChanged);
    }

    private void TriggerScan()
    {
        // TODO: Implement scan trigger
        Console.WriteLine("Triggering file scan...");
    }

    public void Dispose()
    {
        StateService.StateChanged -= OnStateChanged;
    }
}