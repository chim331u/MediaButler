@namespace MediaButler.Web.Components.UI

<span class="status-badge status-@(Status?.ToString()?.ToLower() ?? "unknown") @CssClass">
    @if (ShowIcon)
    {
        <span class="status-icon">@GetStatusIcon()</span>
    }
    <span class="status-text">@GetStatusText()</span>
</span>

@code {
    [Parameter] public object Status { get; set; } = null!;
    [Parameter] public bool ShowIcon { get; set; } = true;
    [Parameter] public string? CustomText { get; set; }
    [Parameter] public string CssClass { get; set; } = "";

    private string GetStatusText()
    {
        return CustomText ?? Status?.ToString() ?? "";
    }

    private string GetStatusIcon()
    {
        var statusString = Status?.ToString()?.ToLower() ?? "";
        return statusString switch
        {
            "discovered" or "new" => "🔍",
            "classified" or "pending" => "📊", 
            "confirmed" or "ready" => "✅",
            "moved" or "complete" => "📁",
            "error" or "failed" => "❌",
            "processing" or "inprogress" => "⏳",
            "retry" => "🔄",
            _ => "📄"
        };
    }
}

<style>
    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
        white-space: nowrap;
    }

    .status-icon {
        font-size: 0.875rem;
    }

    /* Default status styles using design system colors */
    .status-badge.discovered,
    .status-badge.new {
        background: var(--info-color-20);
        color: var(--info-color);
    }

    .status-badge.classified,
    .status-badge.pending,
    .status-badge.pendingreview {
        background: var(--warning-color-20);
        color: var(--warning-color);
    }

    .status-badge.confirmed,
    .status-badge.ready {
        background: var(--success-color-20);
        color: var(--success-color);
    }

    .status-badge.moved,
    .status-badge.complete {
        background: var(--primary-color-20);
        color: var(--primary-color);
    }

    .status-badge.error,
    .status-badge.failed {
        background: var(--error-color-20);
        color: var(--error-color);
    }

    .status-badge.processing,
    .status-badge.inprogress {
        background: var(--neutral-200);
        color: var(--text-muted);
    }

    .status-badge.retry {
        background: var(--warning-color-20);
        color: var(--warning-color);
    }
</style>