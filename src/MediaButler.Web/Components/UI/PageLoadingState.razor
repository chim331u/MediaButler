@namespace MediaButler.Web.Components.UI

<div class="page-loading-state @CssClass">
    @if (LoadingType == LoadingStateType.Skeleton)
    {
        <div class="skeleton-container">
            @for (int i = 0; i < SkeletonLines; i++)
            {
                <div class="skeleton-line @(i == SkeletonLines - 1 ? "short" : "")"></div>
            }
        </div>
    }
    else if (LoadingType == LoadingStateType.Spinner)
    {
        <div class="spinner-container">
            <LoadingSpinner 
                Text="@LoadingText" 
                Size="LoadingSpinner.SpinnerSize.Large" 
                ShowText="@(!string.IsNullOrEmpty(LoadingText))" />
        </div>
    }
    else if (LoadingType == LoadingStateType.Progress)
    {
        <div class="progress-container">
            <ProgressIndicator 
                Progress="@Progress"
                IsIndeterminate="@IsIndeterminate"
                Label="@LoadingText"
                Size="ProgressIndicator.ProgressSize.Large" />
        </div>
    }
    else if (LoadingType == LoadingStateType.Custom && CustomContent != null)
    {
        <div class="custom-container">
            @CustomContent
        </div>
    }
</div>

@code {
    [Parameter] public LoadingStateType LoadingType { get; set; } = LoadingStateType.Spinner;
    [Parameter] public string? LoadingText { get; set; }
    [Parameter] public double? Progress { get; set; }
    [Parameter] public bool IsIndeterminate { get; set; } = true;
    [Parameter] public int SkeletonLines { get; set; } = 3;
    [Parameter] public RenderFragment? CustomContent { get; set; }
    [Parameter] public string CssClass { get; set; } = "";

    public enum LoadingStateType
    {
        Spinner,
        Progress,
        Skeleton,
        Custom
    }
}

<style>
    .page-loading-state {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 200px;
        padding: var(--space-8);
    }

    .spinner-container,
    .progress-container,
    .custom-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--space-4);
        max-width: 400px;
        width: 100%;
    }

    /* Skeleton Loading */
    .skeleton-container {
        width: 100%;
        max-width: 600px;
        display: flex;
        flex-direction: column;
        gap: var(--space-3);
    }

    .skeleton-line {
        height: 20px;
        background: linear-gradient(
            90deg,
            var(--gray-200) 25%,
            var(--gray-100) 50%,
            var(--gray-200) 75%
        );
        background-size: 200% 100%;
        border-radius: var(--radius-base);
        animation: skeleton-pulse 1.5s ease-in-out infinite;
    }

    .skeleton-line.short {
        width: 60%;
    }

    @@keyframes skeleton-pulse {
        0% {
            background-position: 200% 0;
        }
        100% {
            background-position: -200% 0;
        }
    }

    /* Full page overlay variant */
    .page-loading-state.overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(2px);
        z-index: var(--z-modal);
        min-height: 100vh;
    }

    /* Inline variant */
    .page-loading-state.inline {
        min-height: 100px;
        padding: var(--space-4);
    }

    /* Card variant */
    .page-loading-state.card {
        background: white;
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow-base);
        padding: var(--space-6);
        margin: var(--space-4);
    }

    /* Dark theme support */
    [data-theme="dark"] .skeleton-line {
        background: linear-gradient(
            90deg,
            var(--gray-700) 25%,
            var(--gray-600) 50%,
            var(--gray-700) 75%
        );
    }

    [data-theme="dark"] .page-loading-state.overlay {
        background: rgba(17, 24, 39, 0.9);
    }

    [data-theme="dark"] .page-loading-state.card {
        background: var(--gray-800);
        border-color: var(--gray-700);
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .page-loading-state {
            min-height: 150px;
            padding: var(--space-4);
        }

        .skeleton-container {
            max-width: 100%;
        }

        .page-loading-state.card {
            margin: var(--space-2);
            padding: var(--space-4);
        }
    }

    /* Accessibility */
    @@media (prefers-reduced-motion: reduce) {
        .skeleton-line {
            animation: none;
        }
    }

    /* High contrast mode */
    @@media (prefers-contrast: high) {
        .skeleton-line {
            border: 1px solid currentColor;
        }
    }
</style>