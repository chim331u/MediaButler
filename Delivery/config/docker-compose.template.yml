# MediaButler Docker Compose Configuration
# Optimized for QNAP NAS with 1GB RAM constraint
# This template is populated by the deployment script

version: '3.8'

services:
  # =============================================================================
  # MediaButler API Service
  # Memory target: ~150MB
  # =============================================================================
  mediabutler-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
      platforms:
        - ${DOCKER_PLATFORM:-linux/amd64}
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: mediabutler/api:latest
    container_name: mediabutler-api
    restart: unless-stopped
    ports:
      - "${API_PORT}:8080"
    volumes:
      # Persistent data storage
      - /share/CACHEDEV2_DATA/Storage/Docker/file_categorization:/data
      - ./models:/app/models:ro
      - ./configs:/app/configs:ro
      - ./logs/api:/app/logs
      # QNAP specific media folders
      - /share/Download/Incoming:/incoming
      - /share/Video/Serie:/serie
    environment:
      # ASP.NET Core Configuration
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_LOGGING__LOGLEVEL__DEFAULT=Warning

      # MediaButler Configuration
      - MediaButler__Paths__MediaLibrary=/serie
      - MediaButler__Paths__WatchFolder=/incoming
      - MediaButler__Paths__PendingReview=/data/temp

      # File Discovery Settings
      - MediaButler__FileDiscovery__EnableFileSystemWatcher=true
      - MediaButler__FileDiscovery__ScanIntervalMinutes=5
      - MediaButler__FileDiscovery__MaxConcurrentScans=1
      - MediaButler__FileDiscovery__MinFileSizeMB=1
      - MediaButler__FileDiscovery__DebounceDelaySeconds=3

      # ML Configuration for ARM optimization
      - MediaButler__ML__MaxBatchSize=10
      - MediaButler__ML__MaxClassificationTimeMs=500
      - MediaButler__ML__EnableBatchProcessing=true
      - MediaButler__ML__MaxAlternativePredictions=3

      # Performance Settings
      - MediaButler__Performance__MaxConcurrentOperations=2
      - MediaButler__Performance__MaxMemoryUsageMB=140
      - MediaButler__Performance__MemoryThresholdMB=130
      - MediaButler__Performance__AutoGCTriggerMB=120

      # Logging Configuration
      - Serilog__WriteTo__1__Args__path=/app/logs/api-.log
      - Serilog__WriteTo__1__Args__rollingInterval=Day
      - Serilog__WriteTo__1__Args__retainedFileCountLimit=7
      - Serilog__WriteTo__1__Args__fileSizeLimitBytes=10485760

      # Database Configuration
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/mediabutler.db

      # SignalR Settings
      - SignalR__MaxReceiveMessageSize=32768
      - SignalR__ClientTimeoutInterval=00:01:00
      - SignalR__HandshakeTimeout=00:00:15
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT_API}
          cpus: '0.5'
        reservations:
          memory: 100m
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mediabutler
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # MediaButler Web UI Service
  # Memory target: ~100MB
  # =============================================================================
  mediabutler-web:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
      platforms:
        - ${DOCKER_PLATFORM:-linux/amd64}
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: mediabutler/web:latest
    container_name: mediabutler-web
    restart: unless-stopped
    ports:
      - "${WEB_PORT}:3000"
    volumes:
      - ./logs/web:/app/logs
    environment:
      # ASP.NET Core Configuration
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:3000
      - ASPNETCORE_LOGGING__LOGLEVEL__DEFAULT=Warning

      # API Connection
      - API_BASE_URL=http://mediabutler-api:8080

      # Blazor Configuration
      - Blazor__SignalR__MaxReceiveSize=32768
      - Blazor__Server__CircuitOptions__MaxRetainedDisconnectedCircuits=10
      - Blazor__Server__CircuitOptions__DisconnectedCircuitRetentionPeriod=00:01:00
      - Blazor__Server__CircuitOptions__MaxBufferedUnacknowledgedRenderBatches=5

      # Logging
      - Serilog__WriteTo__1__Args__path=/app/logs/web-.log
      - Serilog__WriteTo__1__Args__rollingInterval=Day
      - Serilog__WriteTo__1__Args__retainedFileCountLimit=7
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT_WEB}
          cpus: '0.3'
        reservations:
          memory: 70m
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      mediabutler-api:
        condition: service_healthy
    networks:
      - mediabutler
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # Nginx Reverse Proxy
  # Memory target: ~20MB
  # =============================================================================
  nginx-proxy:
    image: nginx:alpine
    container_name: mediabutler-proxy
    restart: unless-stopped
    ports:
      - "${PROXY_PORT}:80"
      - "${PROXY_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      # SSL certificates (if enabled)
      - ${SSL_CERT_PATH:-/dev/null}:/etc/nginx/ssl/cert.pem:ro
      - ${SSL_KEY_PATH:-/dev/null}:/etc/nginx/ssl/key.pem:ro
    environment:
      - NGINX_HOST=${NGINX_HOST:-_}
      - NGINX_PORT=80
      - SSL_ENABLED=${SSL_ENABLED:-false}
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT_PROXY}
          cpus: '0.1'
        reservations:
          memory: 10m
          cpus: '0.05'
    depends_on:
      - mediabutler-api
      - mediabutler-web
    networks:
      - mediabutler
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # =============================================================================
  # Optional: Watchtower for Auto-Updates (disabled by default)
  # =============================================================================
  watchtower:
    image: containrrr/watchtower:latest
    container_name: mediabutler-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400  # Check daily
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_LABEL_ENABLE=true
    labels:
      - com.centurylinklabs.watchtower.enable=true
    deploy:
      resources:
        limits:
          memory: 50m
          cpus: '0.1'
    networks:
      - mediabutler
    profiles:
      - auto-update  # Only starts when explicitly enabled

# =============================================================================
# VOLUMES CONFIGURATION
# =============================================================================
volumes:
  # Persistent data volume for database and configurations
  mediabutler-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${INSTALL_PATH}/data

  # ML models volume
  mediabutler-models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${INSTALL_PATH}/models

  # Application logs volume
  mediabutler-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${INSTALL_PATH}/logs

# =============================================================================
# NETWORKS CONFIGURATION
# =============================================================================
networks:
  mediabutler:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# =============================================================================
# CONFIGURATION EXTENSIONS
# =============================================================================

# Extension for development overrides
# Use: docker compose -f docker-compose.yml -f docker-compose.dev.yml up
# This allows for development-specific settings without modifying production config

# Extension for SSL/HTTPS configuration
# Uncomment and configure when SSL is enabled

# Extension for external database (PostgreSQL/MySQL)
# For high-performance deployments on more powerful NAS systems