# MediaButler API - Cross-platform build for ARM32 NAS
# Uses AMD64 build environment to avoid ARM32 memory constraints
# Target memory footprint: ~150MB

FROM --platform=linux/amd64 mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build
WORKDIR /source

# Copy project files for dependency restoration (layer caching optimization)
COPY src/MediaButler.API/*.csproj src/MediaButler.API/
COPY src/MediaButler.Core/*.csproj src/MediaButler.Core/
COPY src/MediaButler.Data/*.csproj src/MediaButler.Data/
COPY src/MediaButler.ML/*.csproj src/MediaButler.ML/
COPY src/MediaButler.Services/*.csproj src/MediaButler.Services/

# Restore dependencies for framework-dependent deployment
RUN dotnet restore src/MediaButler.API/MediaButler.API.csproj

# Copy entire source code
COPY . .

# Build and publish with framework-dependent deployment (platform-agnostic)
RUN dotnet publish src/MediaButler.API/MediaButler.API.csproj \
    --configuration Release \
    --output /app \
    --self-contained false \
    --verbosity normal \
    /p:InvariantGlobalization=true

# =============================================================================
# RUNTIME STAGE - .NET Runtime for ARM32
# =============================================================================

FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine
LABEL maintainer="MediaButler Team"
LABEL description="MediaButler API - QNAP NAS Optimized"
LABEL version="1.0.0"

# Install additional dependencies
RUN apk add --no-cache \
    ca-certificates \
    tzdata

# Set working directory
WORKDIR /app

# Copy published application
COPY --from=build /app ./

# Create required directories with proper permissions
RUN mkdir -p \
    data/{library,watch,temp,processing} \
    logs \
    models \
    configs \
    && chown -R $APP_UID:$APP_UID \
        data/ \
        logs/ \
        models/ \
        configs/ \
    && chmod -R 755 \
        data/ \
        logs/ \
        models/ \
        configs/

# Switch to non-root user
USER $APP_UID

# Expose API port
EXPOSE 8080

# Environment variables for 1GB RAM optimization
ENV \
    # .NET Runtime optimizations
    DOTNET_EnableDiagnostics=0 \
    DOTNET_gcServer=0 \
    DOTNET_gcConcurrent=false \
    DOTNET_GCHeapHardLimit=140000000 \
    DOTNET_GCHighMemPercent=75 \
    DOTNET_GCConserveMemory=9 \
    DOTNET_ThreadPool_ForceMinWorkerThreads=4 \
    DOTNET_ThreadPool_ForceMaxWorkerThreads=8 \
    # ASP.NET Core optimizations
    ASPNETCORE_ENVIRONMENT=Production \
    ASPNETCORE_URLS=http://+:8080 \
    ASPNETCORE_HOSTINGSTARTUPASSEMBLIES= \
    ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true \
    # MediaButler specific settings
    MediaButler__Performance__MaxConcurrentOperations=2 \
    MediaButler__Performance__MaxMemoryUsageMB=140 \
    MediaButler__ML__MaxBatchSize=10 \
    MediaButler__FileDiscovery__MaxConcurrentScans=1 \
    # Timezone
    TZ=UTC

# Health check for container orchestration
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Signal handling for graceful shutdown
STOPSIGNAL SIGTERM

# Start the application
ENTRYPOINT ["dotnet", "MediaButler.API.dll"]

# Add metadata labels
LABEL org.opencontainers.image.title="MediaButler API"
LABEL org.opencontainers.image.description="Intelligent TV series file organization API optimized for QNAP NAS"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.vendor="MediaButler"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.source="https://github.com/chim331u/MediaButler"